#user  nobody;
worker_processes  1;
#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;
#pid        logs/nginx.pid;
events {
    worker_connections  1024;
}
http {
    include       mime.types;
    default_type  application/octet-stream;
    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';
    #access_log  logs/access.log  main;
    sendfile        on;
    #tcp_nopush     on;
    #keepalive_timeout  0;
    keepalive_timeout  65;
    gzip  on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types application/javascript text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;
    server {
        listen 80;
        server_name  staging.kout.io;
        return 301 https://$server_name$request_uri;
        #charset koi8-r;
        #access_log  logs/host.access.log  main;
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
    add_header  'Content-Encoding'  'gzip';
        location / {
            root   html;
            index  index.html index.htm;
        }
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }
    server {
        listen 80;
        server_name  screensocial.kout.io;
        return 301 https://$server_name$request_uri;
        #charset koi8-r;
        #access_log  logs/host.access.log  main;
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        add_header  'Content-Encoding'  'gzip';
        location / {
            root   html;
            index  index.html index.htm;
        }
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }
    server {
        listen 443;
        ssl on;
        ssl_certificate /etc/ssl/certs/kout.io.crt;
        ssl_certificate_key /etc/ssl/certs/kout_com.key;
        server_name staging.kout.io;
        access_log /var/log/nginx/access.log;
        error_log /var/log/nginx/error.log;
        location / {
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_cache_bypass $http_upgrade;
            proxy_redirect off;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_pass http://127.0.0.1:8000;
        }
    }
    server {
        listen 443;
        ssl on;
        ssl_certificate /etc/ssl/certs/kout.io.crt;
        ssl_certificate_key /etc/ssl/certs/kout_com.key;
        server_name automated.kout.io;
        access_log /var/log/nginx/access.log;
        error_log /var/log/nginx/error.log;
        location / {
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_cache_bypass $http_upgrade;
            proxy_redirect off;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_pass http://127.0.0.1:3000;
        }
    }
    server {
        listen 443;
        ssl on;
        ssl_certificate /etc/ssl/certs/kout.io.crt;
        ssl_certificate_key /etc/ssl/certs/kout_com.key;
        server_name socket.kout.io;
        access_log /var/log/nginx/access.log;
        error_log /var/log/nginx/error.log;
        location / {
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $host;
            proxy_http_version 1.1;
            proxy_pass http://socket;
        }
    }
    upstream socket {
        ip_hash;
        server 127.0.0.1:7777;
    }
}